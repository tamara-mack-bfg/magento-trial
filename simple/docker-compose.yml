version: "3.8"

# Listing our three containers. Or "services", as known by Docker Compose.
services:
  # Defining our MySQL container.
  # "mysql" will be the network alias for this container.
  mysql:
    image: mysql:5.7
    container_name: mag-simple-mysql
    networks:
      - mag-simple-network
    ports:
      - "3306:3306"
    volumes:
      - mag-simple-mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: bfg
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: magento_demo

  # Defining our Elasticsearch container
  # "elasticsearch" will be the network alias for this container.
  elasticsearch:
    image: elasticsearch:7.8.1
    container_name: mag-simple-elasticsearch
    networks:
      - mag-simple-network
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: single-node

  # Defining our custom Magento 2 container.
  # "web" will be the network alias for this container.
  simple:
    # The build section tells Docker Compose how to build the image.
    # This essentially runs a "docker build" command.
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USER: bfg
        UID: 1000
        GID: 1000
    container_name: mag-simple-web
    networks:
      - mag-simple-network
    ports:
      - "5000:5000"
    volumes:
      - .:/workspaces/mag-simple

# The volume that is used by the MySQL container
volumes:
  mag-simple-mysql-data:

# The network where all the containers will live
networks:
  mag-simple-network:
